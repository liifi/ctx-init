name: Go Build and Release

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22

    - name: Build
      run: |
        # Static - Build for Linux (amd64)
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}' -extldflags -static" -o ctx-init-linux-amd64-static main.go
        
        # Build for Linux (amd64)
        GOOS=linux GOARCH=amd64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}'" -o ctx-init-linux-amd64 main.go
        
        # Build for Linux (arm64)
        GOOS=linux GOARCH=arm64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}'" -o ctx-init-linux-arm64 main.go
        
        # Build for macOS (amd64)
        GOOS=darwin GOARCH=amd64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}'" -o ctx-init-darwin-amd64 main.go
        
        # Build for macOS (arm64)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}'" -o ctx-init-darwin-arm64 main.go
        
        # TODO: Build for Windows (amd64)
        # GOOS=windows GOARCH=amd64 go build -ldflags="-X 'main.versionString=${{ github.ref_name }}'" -o ctx-init-windows-amd64.exe main.go
        

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ctx-init-linux-amd64-static
          ctx-init-linux-amd64
          ctx-init-linux-arm64
          ctx-init-windows-amd64.exe
          ctx-init-darwin-amd64
          ctx-init-darwin-arm64
