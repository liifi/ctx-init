name: Deno Build and Release

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.44

    - name: Build
      env:
        # Make the version string available as an environment variable
        # Your Deno script (main.ts) can access this using Deno.env.get("VERSION_STRING")
        VERSION_STRING: ${{ github.ref_name }}
      run: |
        # Build for Linux (x86_64)
        deno compile --allow-all --output ctx-init-linux-amd64 --target x86_64-unknown-linux-gnu main.ts
        
        # Build for Linux (arm64)
        deno compile --allow-all --output ctx-init-linux-arm64 --target aarch64-unknown-linux-gnu main.ts
        
        # Build for macOS (x86_64)
        deno compile --allow-all --output ctx-init-darwin-amd64 --target x86_64-apple-darwin main.ts
        
        # Build for macOS (arm64)
        deno compile --allow-all --output ctx-init-darwin-arm64 --target aarch64-apple-darwin main.ts
        
        # Build for Windows (x86_64)
        deno compile --allow-all --output ctx-init-windows-amd64.exe --target x86_64-pc-windows-msvc main.ts

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ctx-init-linux-amd64
          ctx-init-linux-arm64
          ctx-init-darwin-amd64
          ctx-init-darwin-arm64
          ctx-init-windows-amd64.exe
